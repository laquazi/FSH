{
    // Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }

    "New identity lambda": {
        "scope": "fsharp",
        "prefix": ["fun", "id"],
        "body": ["(fun ${1:x} -> ${2:x})"],
        "description": "Identity lambda function"
    },
    "New function or value": {
        "scope": "fsharp",
        "prefix": ["let"],
        "body": ["let ${1:name} =", "  //", "  ${2:()}"],
        "description": "Declare new function or value"
    },
    "Match with": {
        "scope": "fsharp",
        "prefix": ["match"],
        "body": ["match ${1:value} with", "  | ${2:_} -> ${3:()}"],
        "description": "Match statement"
    }
}
